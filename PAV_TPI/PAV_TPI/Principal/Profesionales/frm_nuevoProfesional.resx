<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC82ewbsMzhyavG
        2nGwxNcNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALza
        8qKyzuP8rMfb/6zG2vCrxtqMqsPdHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC/1P8Mvdvy+LXR5/ysx9v/rMfb/6zH2/+sxtv6rMbbp63K3TUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALvb9jm92/P/u9jw/azH2/2sx9v/rMfb/6zH2/+sx9v/q8ba/qvG2sOqxtlRf///AgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAvtv0R73b8/+92/P/tdLo+6zH2/+sx9v/rMfb/6zH2/+sx9v/rMfb/6zH
        2/+sx9rbrMbbbKrG4gkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC72PBIvdvz/7za8v7V5PH7vtTn+KvG2v6sx9v/rMfb/6zH
        2/+sx9v/rMfb/6vG2v6yz+T7utvwRwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALvY8Ei92/P/vNry/s3g8vvB3PH9utfu/LLO
        4/yuyd38q8fb+63I3PyxzeL8uNXs/L3b8/+72/BIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKXD0hGsyNtBrMjbUKrG2VGqxtlRs9Hngb3b8/+92/P/vdvz/73b
        8/+92/P/vdvy/b3b8v292/P/vdvz/73b8/+92/P/vdvz/7TR54KqxtlRqsbZUazI21CsyNtBpcPSEQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAK3I2hyrxtqnq8ba+qzH2/+sx9v/rMfb/6zH2/+wzOH7vdvz/73b
        8/+92/P/wNvy/dPi8fzb5vH92+bx/dPi8fzA2/L9vdvz/73b8/+92/P/sMzh/6zH2/+sx9v/rMfb/6zH
        2/+rxtv6q8bap63I2hwAAAAAAAAAAAAAAACqydkwrMfb6q7I2/2sxtr+rMfb/6zH2/+ux9v9rMba/rDM
        4fu92/P/vdvz/7/b8v3Z5fH93efy/93n8v/d5/L/3efy/9nl8f2/2/L9vdvz/73b8/+wzOH/rMfb/6zH
        2/+sx9v/rMfb/6zH2/+sx9v/rMfb6q/J3zAAAAAAo8jaDqvG2uKsx9v/zNfi+73Q3/usx9v/rMfb/8jV
        4fzA0d/8sMzh+73b8/+92/P/zODx/N3n8v/d5/L/3efy/93n8v/d5/L/3efy/83g8fy92/P/vdvz/7DM
        4f+7z9/7yNbi+qzH2/+sx9v/uM7e+8rX4vqsx9v/q8ba4qPI2g6sx9l7rMfb/6zH2/+zytz8rsjb/bvO
        3vy2zN38scnb/a/I2/2wzOH7vdvz/73b8//T4/L73efy/93n8v/d5/L/3efy/93n8v/d5/L/0+Py+73b
        8/+92/P/sMzh/7HJ2/24zN38sMjb/bjN3fywydv9uc7e+6zH2/+sx9v/rMfZe6vG2tCsx9v/rMfb/6zH
        2/+sx9v/wtLg+7rP3vusx9v/rMfb/7DM4fu92/P/vdvz/9Pj8fvd5/L/3efy/93n8v/d5/L/3efy/93n
        8v/U4/H7vdvz/73b8/+wzOH/rMfb/6zH2/+5zt77zNfi+qzH2/+sx9v/rMfb/6zH2/+rxtrQq8fa96zH
        2/+sx9v/yNbi+rvP3vusx9v/rMfb/8XT4Pu+0N/7sMzh+73b8/+92/P/0+Px+93n8v/d5/L/3efy/93n
        8v/d5/L/3efy/9Tj8fu92/P/vdvz/7DM4f+4zd38wtLg+6zH2/+rxtr+tszd/MXU4fqsx9v/rMfb/6zH
        2verxtv1rMfb/6zH2/+4zN38scnb/bHJ2/2vyNv9t8zd/LPL3PywzOH7vdvz/73b8//T4/H73efy/93n
        8v/d5/L/3efy/93n8v/d5/L/1OPx+73b8/+92/P/sMzh/7XL3fy90N/7q8ba/q7H2/2zy9z8wNHf+6zH
        2/+sx9v/rMfa9qzG2susx9v/rMfb/6zH2/+sx9v/ydbi+8HR4Pusx9v/rMfb/7DM4fu92/P/vdvz/9Pj
        8fvd5/L/3efy/93n8v/d5/L/3efy/93n8v/U4/H7vdvz/73b8/+wzOH/rMfb/6zH2/+7z9/7ztjj+6zH
        2/+sx9v/rMfb/6zH2/+sx9vLqsXbc6zH2/+sx9v/wNHf+7bM3fyux9v9rMba/r3Q3/u4zd38sMzh+73b
        8/+92/P/0+Py+93n8v/d5/L/3efy/93n8v/d5/L/3efy/9Pj8vu92/P/vdvz/7DM4f+zy9z8us7e/K7I
        2/2zy9z8scnb/bvP3/usx9v/rMfb/6rH23OqxuIJrMfb2azH2//A0d/7tszd/KzH2/+sx9v/vdDf+7jN
        3fywzOH7vdvz/73b8//M4PH83efy/93n8v/d5/L/3efy/93n8v/d5/L/zODx/L3b8/+92/P/sMzh/7rO
        3vvG1OD7rMfb/6zH2/+3zN38yNbi+qzH2/+rxtraqsbiCQAAAACnyd0mrMfa4azH2/+sx9v/rMfb/6zH
        2/+sx9v/rMfb/7DM4fu92/P/vdvz/77b8v3Z5fL83efy/93n8v/d5/L/3efy/9jk8f2+2/L9vdvz/73b
        8/+wzOH/rMfb/6zH2/+sx9v/rMfb/6zH2/+sx9v/rMfa4a7J3SYAAAAAAAAAAAAAAACuydYTrMfalKvH
        2/Ksx9v/rMfb/6zH2/+sx9v/sMzh+73b8/+92/P/vdvz/7/b8v3Q4vH82uXx/Nrl8fzQ4vH8v9vy/b3b
        8/+92/P/vdvz/7DM4f+sx9v/rMfb/6zH2/+sx9v/q8fb8qzH2pSuydYTAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAqtTUBqjD2S+sxdk+qsbaP6rG2j+20+l0vdvz/73b8/+92/P/vdvz/73b8/+92/P/vdvz/73b
        8/+92/P/vdvz/73b8/+92/P/t9PpdarG2j+qxto/rMXZPqjI2S+q1NQGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALvY8Ei92/P/vdvz/8vg8vvD3fL8vdvz/8be
        8vzH3vH8vdvz/8Pd8vzL4PL7vdvz/73b8/+72/BIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAu9jwSL3b8/+92/P/0+Px+8fe
        8fy92/P/zeHy+8/h8vu92/P/x97x/NPi8fu92/P/vdvz/7vb8EgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC62/RHvdvz/73b
        8/+92/P/v9vy/czg8vu82vL+vdvz/8vg8vvA3PL9vdvz/73b8/+92/P/vtv0RwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALnZ
        8Te92/P/vdvz/73b8//E3fL82eXy+77b8v292/L92OXy+8bd8fy92/P/vdvz/73b8/++2fE3AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAxuL/Cb3a8/W92/P/yN7x/MLd8vy92/P/xN3y/Mbe8vy92/P/wt3y/Mje8fy92/P/vdrz9cbi
        /wkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAvNrzmb3b8//V4/H7yd/y+73b8//O4fL70OLx+73b8//J3/L71uTy+r3b
        8/+82vOZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/2PIUvNry4r3b8/+92/P/vdvz/73b8/+92/P/vdvz/73b
        8/+92/P/vNry4r/Y8hQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC71vEmvNrz2L3b8/+92/P/vdvz/73b
        8/+92/P/vdvz/7za89i73fEmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC/3/8Iu9nzbrzb
        88S92/Ptvdvz7bzb88S72fNuv9//CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////D////wP///4A///+AB///gAH//4AB//+AAf/wAAAPwAAAA4AA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAHAAAAD8AAAD/+AAf//gAH//4AB//+A
        Af//gAH//8AD///AA///4Af///AP//////8=
</value>
  </data>
</root>